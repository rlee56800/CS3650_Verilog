$date
	Thu Oct 13 15:41:25 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Alu_Top_tb $end
$var wire 1 ! zero $end
$var wire 32 " result [31:0] $end
$var reg 32 # A [31:0] $end
$var reg 32 $ B [31:0] $end
$var reg 6 % func_field [5:0] $end
$var reg 6 & opcode [5:0] $end
$scope module uut $end
$var wire 32 ' A [31:0] $end
$var wire 32 ( B [31:0] $end
$var wire 6 ) func_field [5:0] $end
$var wire 6 * opcode [5:0] $end
$var wire 1 ! zero $end
$var wire 32 + result [31:0] $end
$var wire 3 , alu_control [2:0] $end
$scope module alu_core_inst $end
$var wire 32 - A [31:0] $end
$var wire 32 . B [31:0] $end
$var wire 1 ! zero $end
$var wire 3 / alu_control [2:0] $end
$var reg 32 0 result [31:0] $end
$upscope $end
$scope module alu_ctrlr_inst $end
$var wire 6 1 func_field [5:0] $end
$var wire 6 2 opcode [5:0] $end
$var reg 3 3 alu_control [2:0] $end
$var reg 3 4 func_code [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
1!
$end
#30
0!
b11001100110011 "
b11001100110011 +
b11001100110011 0
b100000 %
b100000 )
b100000 1
b1000100010001 $
b1000100010001 (
b1000100010001 .
b10001000100010 #
b10001000100010 '
b10001000100010 -
#60
1!
b0 "
b0 +
b0 0
b10 ,
b10 /
b10 3
b10 4
b100100 %
b100100 )
b100100 1
#90
0!
b11001100110011 "
b11001100110011 +
b11001100110011 0
b0 ,
b0 /
b0 3
b0 4
b0 %
b0 )
b0 1
b100011 &
b100011 *
b100011 2
#120
1!
b1 ,
b1 /
b1 3
b0 "
b0 +
b0 0
b100 &
b100 *
b100 2
b101010101010101 $
b101010101010101 (
b101010101010101 .
b101010101010101 #
b101010101010101 '
b101010101010101 -
#150
b101 ,
b101 /
b101 3
b101 4
0!
b1 "
b1 +
b1 0
b101010 %
b101010 )
b101010 1
b0 &
b0 *
b0 2
b10001000100010 $
b10001000100010 (
b10001000100010 .
b1000100010001 #
b1000100010001 '
b1000100010001 -
#180
